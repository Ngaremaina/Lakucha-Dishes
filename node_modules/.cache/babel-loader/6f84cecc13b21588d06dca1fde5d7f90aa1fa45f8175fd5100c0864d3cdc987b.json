{"ast":null,"code":"var _jsxFileName = \"/home/ngare/Projects/Lakucha/src/App.js\",\n  _s = $RefreshSig$();\nimport firebase from \"./firebase-config\";\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport FoodList from \"./customer/FoodList\";\nimport Header from \"./customer/Header\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [foods, setFoods] = useState([]);\n  const [page, setPage] = useState(\"/\");\n  // const [loading, setLoading] = useState(false)\n\n  // const ref = collection(firebase, \"lunch\")\n\n  const foodCollection = firebase.firestore().collection(\"lunch\");\n  useEffect(() => {\n    foodCollection.onSnapshot(querySnapshot => {\n      const foodlist = [];\n      querySnapshot.forEach(fooditem => {\n        foodlist.push(fooditem.data());\n      });\n      setFoods(foodlist);\n    });\n  });\n\n  // const displayFoods = foods.map(food => {\n  //   return <div><p>{food.description}</p></div>\n  // })\n\n  // function getFoods(){\n  //   setLoading(true)\n  //   lunchCollection.onSnapshot((querysnapshot) => {\n  //     const items = []\n  //     querysnapshot.forEach(doc => {\n  //       items.push(doc.data())\n  //     })\n  //     setFoods(items)\n  //     setLoading(false)\n  //   })\n  // }\n  // useEffect(() => {\n  //   getFoods()\n  // },[])\n\n  // if (loading){\n  //   return <h1>loading...</h1>\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    style: {\n      backgroundColor: \"black\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(FoodList, {\n          foods: foods\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oYqihrbEH4lUQgHdqBz9szlgaNE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["firebase","useEffect","useState","FoodList","Header","Route","Routes","jsxDEV","_jsxDEV","App","_s","foods","setFoods","page","setPage","foodCollection","firestore","collection","onSnapshot","querySnapshot","foodlist","forEach","fooditem","push","data","className","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/home/ngare/Projects/Lakucha/src/App.js"],"sourcesContent":["import firebase from \"./firebase-config\"\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport FoodList from \"./customer/FoodList\";\nimport Header from \"./customer/Header\";\nimport {Route, Routes} from \"react-router-dom\"\n\n\nfunction App() {\n  const [foods, setFoods] = useState([])\n  const [page, setPage] = useState(\"/\")\n  // const [loading, setLoading] = useState(false)\n\n  // const ref = collection(firebase, \"lunch\")\n\n  const foodCollection = firebase.firestore().collection(\"lunch\")\n\n  useEffect(() => {\n    foodCollection.onSnapshot(querySnapshot => {\n      const foodlist = []\n      querySnapshot.forEach(fooditem => {\n        foodlist.push(fooditem.data())\n      })\n      setFoods(foodlist)\n    })\n  })\n\n  // const displayFoods = foods.map(food => {\n  //   return <div><p>{food.description}</p></div>\n  // })\n  \n\n  \n  // function getFoods(){\n  //   setLoading(true)\n  //   lunchCollection.onSnapshot((querysnapshot) => {\n  //     const items = []\n  //     querysnapshot.forEach(doc => {\n  //       items.push(doc.data())\n  //     })\n  //     setFoods(items)\n  //     setLoading(false)\n  //   })\n  // }\n  // useEffect(() => {\n  //   getFoods()\n  // },[])\n  \n\n  // if (loading){\n  //   return <h1>loading...</h1>\n  // }\n\n\n  \n  return (\n    <div className=\"container-fluid\" style={{backgroundColor : \"black\"}}>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<FoodList foods = {foods}/>}/>\n      </Routes>\n      \n     \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,mBAAmB;AACxC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAAQC,KAAK,EAAEC,MAAM,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,GAAG,CAAC;EACrC;;EAEA;;EAEA,MAAMa,cAAc,GAAGf,QAAQ,CAACgB,SAAS,EAAE,CAACC,UAAU,CAAC,OAAO,CAAC;EAE/DhB,SAAS,CAAC,MAAM;IACdc,cAAc,CAACG,UAAU,CAACC,aAAa,IAAI;MACzC,MAAMC,QAAQ,GAAG,EAAE;MACnBD,aAAa,CAACE,OAAO,CAACC,QAAQ,IAAI;QAChCF,QAAQ,CAACG,IAAI,CAACD,QAAQ,CAACE,IAAI,EAAE,CAAC;MAChC,CAAC,CAAC;MACFZ,QAAQ,CAACQ,QAAQ,CAAC;IACpB,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACA;EACA;;EAIA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;;EAIA,oBACEZ,OAAA;IAAKiB,SAAS,EAAC,iBAAiB;IAACC,KAAK,EAAE;MAACC,eAAe,EAAG;IAAO,CAAE;IAAAC,QAAA,gBAClEpB,OAAA,CAACJ,MAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACVxB,OAAA,CAACF,MAAM;MAAAsB,QAAA,eACLpB,OAAA,CAACH,KAAK;QAAC4B,IAAI,EAAC,GAAG;QAACC,OAAO,eAAE1B,OAAA,CAACL,QAAQ;UAACQ,KAAK,EAAIA;QAAM;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAGL;AAEV;AAACtB,EAAA,CAzDQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA2DZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}